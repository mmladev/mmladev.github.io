{"version":3,"sources":["assets/hat-design.png","components/cart.tsx","components/description.tsx","components/showcase.tsx","components/title.tsx","components/payment.tsx","components/footer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","Cart","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","items","changeItemCount","bind","assertThisInitialized","inherits","createClass","key","value","val","setState","_this2","react_default","a","createElement","className","TextField","variant","type","label","InputProps","endAdornment","InputAdornment","position","IconButton","edge","aria-label","onClick","Remove_default","Add_default","Typography","price","disabled","startAdornment","React","Component","Description","Card","Showcase","src","Hat","Title","Payment","Button","color","Footer","PackageJson","version","App","MuiThemeProvider","theme","Mui","palette","CssBaseline","Grid","container","item","xs","showcase","title","description","cart_Cart","payment_Payment","footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.be84fd49.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hat-design.c4941902.png\";","import * as Mui from '@material-ui/core';\r\nimport PlusIcon from '@material-ui/icons/Add';\r\nimport MinusIcon from '@material-ui/icons/Remove';\r\nimport React from 'react';\r\n\r\ninterface CartState {\r\n\titems: number;\r\n}\r\n\r\ninterface CartProps {\r\n\tprice: number;\r\n}\r\n\r\nexport class Cart extends React.Component<CartProps, CartState> {\r\n\tconstructor(props: CartProps) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\titems: 0,\r\n\t\t};\r\n\t\tthis.changeItemCount = this.changeItemCount.bind(this);\r\n\t}\r\n\r\n\tchangeItemCount(val: number): void {\r\n\t\tif (this.state.items + val < 0) return;\r\n\t\tthis.setState({ items: this.state.items + val });\r\n\t}\r\n\r\n\trender(): JSX.Element {\r\n\t\treturn (\r\n\t\t\t<div className=\"cart\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Mui.TextField\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tlabel=\"Items\"\r\n\t\t\t\t\t\tvalue={this.state.items}\r\n\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\tendAdornment: (\r\n\t\t\t\t\t\t\t\t<Mui.InputAdornment position=\"end\">\r\n\t\t\t\t\t\t\t\t\t<Mui.IconButton edge=\"end\" aria-label=\"Toggle password visibility\" onClick={() => { this.changeItemCount(-1); }} >\r\n\t\t\t\t\t\t\t\t\t\t<MinusIcon />\r\n\t\t\t\t\t\t\t\t\t</Mui.IconButton>\r\n\t\t\t\t\t\t\t\t\t<Mui.IconButton edge=\"end\" aria-label=\"Toggle password visibility\" onClick={() => { this.changeItemCount(+1); }} >\r\n\t\t\t\t\t\t\t\t\t\t<PlusIcon />\r\n\t\t\t\t\t\t\t\t\t</Mui.IconButton>\r\n\t\t\t\t\t\t\t\t</Mui.InputAdornment>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Mui.Typography variant=\"caption\">Price per item: ${this.props.price}</Mui.Typography>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Mui.TextField\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tlabel=\"Total\"\r\n\t\t\t\t\t\tdisabled={true}\r\n\t\t\t\t\t\tvalue={this.state.items * this.props.price}\r\n\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\tstartAdornment: <Mui.InputAdornment position=\"start\">$</Mui.InputAdornment>,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import * as Mui from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nconst Description: React.FC = () => {\r\n\treturn (\r\n\t\t<Mui.Card className=\"description\">\r\n\t\t\t<Mui.Typography variant=\"subtitle1\">\r\n\t\t\t\tShow your support to the movement to legalize marijuana by sporting your own Make Marijuana Legal Again hat.\r\n\t\t\t</Mui.Typography>\r\n\t\t</Mui.Card>\r\n\t);\r\n}\r\n\r\nexport default Description;\r\n","import React from 'react';\r\nimport Hat from '../assets/hat-design.png';\r\n\r\nconst Showcase: React.FC = () => {\r\n\treturn (\r\n\t\t<div className=\"showcase\">\r\n\t\t\t<img src={Hat} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Showcase;\r\n","import * as Mui from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nconst Title: React.FC = () => {\r\n\treturn (\r\n\t\t<div className=\"title\">\r\n\t\t\t<Mui.Typography variant=\"h4\">\r\n\t\t\t\tMake Marijuana Legal Again\r\n\t\t\t</Mui.Typography>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Title;\r\n","import * as Mui from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nexport default class Payment extends React.Component<{}, {}> {\r\n\tconstructor() {\r\n\t\tsuper({});\r\n\t}\r\n\r\n\trender(): JSX.Element {\r\n\t\treturn (\r\n\t\t\t<Mui.Button variant=\"contained\" color=\"primary\">\r\n\t\t\t\tPay\r\n\t\t\t</Mui.Button>\r\n\t\t);\r\n\t}\r\n}","import * as Mui from '@material-ui/core';\r\nimport React from 'react';\r\nimport PackageJson from '../../package.json';\r\n\r\nexport default class Footer extends React.Component<{}, {}> {\r\n\tconstructor() {\r\n\t\tsuper({});\r\n\t}\r\n\r\n\trender(): JSX.Element {\r\n\t\treturn (\r\n\t\t\t<Mui.Typography variant=\"overline\">\r\n\t\t\t\tVersion {PackageJson.version}\r\n\t\t\t</Mui.Typography>\r\n\t\t);\r\n\t}\r\n}","import * as Mui from '@material-ui/core';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\nimport React from 'react';\r\n// import $script from 'scriptjs';\r\nimport { Cart } from './components/cart';\r\nimport Description from './components/description';\r\nimport Showcase from './components/showcase';\r\nimport Title from './components/title';\r\nimport './App.css';\r\nimport 'typeface-roboto';\r\nimport Payment from './components/payment';\r\nimport Footer from './components/footer';\r\n\r\nconst App: React.FC = () => {\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<MuiThemeProvider theme={Mui.createMuiTheme({ palette: { type: 'dark' } })}>\r\n\t\t\t\t<Mui.CssBaseline />\r\n\t\t\t\t<Mui.Grid container={true}>\r\n\t\t\t\t\t<Mui.Grid item={true} xs={5}>\r\n\t\t\t\t\t\t<Showcase />\r\n\t\t\t\t\t</Mui.Grid>\r\n\t\t\t\t\t<Mui.Grid item={true} xs={7}>\r\n\t\t\t\t\t\t<Title />\r\n\t\t\t\t\t\t<Description />\r\n\t\t\t\t\t\t<Cart price={25} />\r\n\t\t\t\t\t\t<Payment />\r\n\t\t\t\t\t</Mui.Grid>\r\n\t\t\t\t</Mui.Grid>\r\n\t\t\t\t<Footer />\r\n\t\t\t</MuiThemeProvider>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n\twindow.location.hostname === 'localhost' ||\r\n\t\t// [::1] is the IPv6 localhost address.\r\n\t\twindow.location.hostname === '[::1]' ||\r\n\t\t// 127.0.0.1/8 is considered localhost for IPv4.\r\n\t\twindow.location.hostname.match(\r\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n\t\t)\r\n);\r\n\r\ntype Config = {\r\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n\t\t// The URL constructor is available in all browsers that support SW.\r\n\t\tconst publicUrl = new URL(\r\n\t\t\t(process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n\t\t\twindow.location.href\r\n\t\t);\r\n\t\tif (publicUrl.origin !== window.location.origin) {\r\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\r\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\r\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\twindow.addEventListener('load', () => {\r\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n\t\t\tif (isLocalhost) {\r\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\r\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\r\n\r\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\r\n\t\t\t\t// service worker/PWA documentation.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\r\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Is not localhost. Just register service worker\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n\tnavigator.serviceWorker\r\n\t\t.register(swUrl)\r\n\t\t.then(registration => {\r\n\t\t\tregistration.onupdatefound = () => {\r\n\t\t\t\tconst installingWorker = registration.installing;\r\n\t\t\t\tif (installingWorker == null) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tinstallingWorker.onstatechange = () => {\r\n\t\t\t\t\tif (installingWorker.state === 'installed') {\r\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\r\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\r\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\r\n\t\t\t\t\t\t\t// content until all client tabs are closed.\r\n\t\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\r\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\r\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// At this point, everything has been precached.\r\n\t\t\t\t\t\t\t// It's the perfect time to display a\r\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\r\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\r\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.error('Error during service worker registration:', error);\r\n\t\t});\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n\t// Check if the service worker can be found. If it can't reload the page.\r\n\tfetch(swUrl)\r\n\t\t.then(response => {\r\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\r\n\t\t\tconst contentType = response.headers.get('content-type');\r\n\t\t\tif (\r\n\t\t\t\tresponse.status === 404 ||\r\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\r\n\t\t\t) {\r\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\t\t\tregistration.unregister().then(() => {\r\n\t\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Service worker found. Proceed as normal.\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(() => {\r\n\t\t\tconsole.log(\r\n\t\t\t\t'No internet connection found. App is running in offline mode.'\r\n\t\t\t);\r\n\t\t});\r\n}\r\n\r\nexport function unregister() {\r\n\tif ('serviceWorker' in navigator) {\r\n\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\tregistration.unregister();\r\n\t\t});\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}